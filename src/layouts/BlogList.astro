---
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import TagList from '../components/TagList.astro';
import Tag from '../components/Tag.astro';
import { slugifyPost } from '../helpers';

interface Props {
    page: Page<CollectionEntry<'blog'>>;
    tag?: string;
    year?: number;
    month?: number;
}

const { page, tag, year, month } = Astro.props;

const monthNames = [
    'January', 'February', 'March', 'April', 'May', 'June', 'July', 
    'August', 'September', 'October', 'November', 'December'
];

const monthAndYear = (month && year) ? `${monthNames[month]}, ${year}` : undefined;

---

<section>
    {
        (tag && (
            <h1>Posts about <Tag name={tag!} /></h1>
        )) ||
        ( year && month && (
            <h1>Posts from {monthAndYear}</h1>
        )) ||
        <h1>Latest posts</h1>
    }
    <ul>
        {
            page.data.map((post) => (
                <li>
                    <a href={`/blog/${slugifyPost(post)}/`}>
                        <h4 class="title">
                            {post.data.title} 
                            <span class="date">| <FormattedDate date={post.data.pubDate} /></span>
                            {
                                post.data.updatedDate && (
                                    <span class="date">
                                       [ Updated: <FormattedDate date={post.data.updatedDate} /> ]
                                    </span>
                                )
                            }
                        </h4>
                        
                            
                        
                    </a>
                    <p class="description">
                        { post.data.description }
                    </p>
                    
                    { 
                        post.data.tags && (
                            <div class="tags">
                                <TagList tags={post.data.tags} />
                            </div>
                        ) 
                    }
                    
                </li>
            ))
        }
    </ul>
    <div class="pagination">
        {
            page.url.prev && (
                <a href={page.url.prev}>
                    <button>Prev</button>
                </a>
            )
        }
        {
            page.url.next && (
                <a href={page.url.next}>
                    <button>Next</button>
                </a>
            )
        }
    </div>
</section>

<style>
    @layer override {
        & .tags :global(div) {
            justify-content: flex-start;
        }
    }

    @layer layout {
        section {
            margin: 0;

            @media (min-width: 1200px) {
                margin: 0 1rem;
            }

            & h1 {
                text-align: center;
            }

            & ul {
                display: flex;
                flex-wrap: wrap;
                gap: 1rem;
                list-style-type: none;
                margin: 0;
                padding: 0.5rem;

                & li {
                    width: 100%;
                    padding: 1rem;
                    border-radius: 0.25rem;
                    border: 1px solid rgb(168, 155, 180);

                    @media (prefers-color-scheme: light) {
                        background-color: #e7ebee;
                    }
                    @media (prefers-color-scheme: dark) {
                        background-color: #343e4b;
                    }

                    & * {
                        text-decoration: none;
                        transition: 0.2s ease;
                    }

                    & a {
                        display: flex;
                        flex-wrap: wrap;
                        justify-content: flex-start;
                        gap: 1rem;

                        &:hover h4, &:hover .date {
                            color: inherit;
                        }
                    }

                    & span {
                        display: inline;
                    }

                    & .title {
                        margin: 0;
                        line-height: 1;
                    }
                    & .date {
                        font-size: 1.4rem;
                        font-weight: normal;
                        vertical-align: middle;
                        margin: 0;
                        color: rgb(var(--gray));
                    }

                    & p.description {
                        margin: 0.25rem 0.5rem;

                        @media (prefers-color-scheme: light) {
                            color: #333;
                        }
                        @media (prefers-color-scheme: dark) {
                            color: #ebebeb;
                        }
                    }

                    & .tags {
                        padding-left: 2rem;
                    }
                }
            }
            & .pagination {
                display: flex;
                justify-content: space-between;
                padding: 1rem;

                & button {
                    padding: 0.4rem 1rem;
                }

            }
        }
    }
</style>