---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import Base from '../../../../layouts/Base.astro';
import BlogList from '../../../../layouts/BlogList.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../../consts';
import { getUniqueTags, sortByDateDesc } from '../../../../helpers';

type BlogPost = CollectionEntry<'blog'>;

export const getStaticPaths = (async ({ paginate }) => {
	const posts = await getCollection('blog');
	const tags = getUniqueTags(posts);

	return tags.flatMap((tag) => {
		const filteredPosts = posts
			.filter((post: BlogPost) => 
				post.data.tags?.map((s) => s.toLowerCase())?.includes(tag))
			.sort(sortByDateDesc);

		return paginate(filteredPosts, {
			params: { tag },
			pageSize: 10
		});
	});
}) satisfies GetStaticPaths;

type Params = { tag: string };
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { page } = Astro.props;
const description = SITE_DESCRIPTION + ` Posts about ${tag}.`;

---

<Base title={SITE_TITLE} {description}>
	<BlogList {page} {tag} />
</Base>
